{"version":3,"sources":["src/libs/ts.js","src/components/gameobject.js","src/components/player.js","src/components/tower.js","src/components/arrow.js","src/components/enemy.js","src/game.js","src/index.js"],"names":["x","c","a","e","createShader","shaderSource","compileShader","y","h","createProgram","attachShader","linkProgram","B","d","createBuffer","bindBuffer","bufferData","TCTex","createTexture","bindTexture","texParameteri","texImage2D","width","height","TS","indexB","m","n","p","getContext","z","bufferSubData","bind","A","drawElements","E","q","ArrayBuffer","b","Float32Array","r","Uint32Array","g","Uint16Array","f","byteLength","l","k","t","C","blendFunc","enable","useProgram","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","uniformMatrix4fv","getUniformLocation","activeTexture","col","bkg","F","clearColor","cls","clear","img","u","v","D","G","H","w","flush","subarray","window","TCShd","TCPrg","TCBuf","GameObject","constructor","texture","scaleX","scaleY","positionX","positionY","originX","originY","rotation","currentFrame","maxFrames","setFrame","animate","update","u0","v0","u1","v1","draw","canvas","Player","Math","PI","Tower","speed","deltaTime","Arrow","setOrientation","dir","mapping","up","left","down","right","Enemy","enemyTexture","arrowTexture","arrowObject","random","inRange","player","abs","Game","textures","gameObjects","enemies","slideSpeed","lastFrameTime","enemiesSpawned","distanceSlided","push","kitten","i","tower","mainLoop","spawnEnemy","pos","enemy","arrow","fps","setInterval","forEach","gameObject","elapsedTime","requestAnimationFrame","move","nextEnemy","alert","index","indexOf","splice","shift","$c","document","getElementById","game","kittenstex","arrowtex","console","log","touchStart","addEventListener","event","touches","clientX","clientY","diff","changedTouches","ratio","absRatio","hypot","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","KeyW","KeyS","KeyA","KeyD","code","loadImage","src","Promise","resolve","reject","image","Image","error","name","all","Object","entries","map","then","fromEntries","catch"],"mappings":"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","file":"src.4ef83618.js","sourceRoot":"..","sourcesContent":["/*\nTinySprite module (https://github.com/bitnenfer/tiny-canvas)\nDeveloped by Felipe Alfonso -> https://twitter.com/bitnenfer/\n*/\nfunction x(c,a,e){e=c.createShader(e);c.shaderSource(e,a);c.compileShader(e);return e}function y(c,a,e){var h=c.createProgram();a=x(c,a,35633);e=x(c,e,35632);c.attachShader(h,a);c.attachShader(h,e);c.linkProgram(h);return h}function B(c,a,e,h){var d=c.createBuffer();c.bindBuffer(a,d);c.bufferData(a,e,h);return d}window.TCShd=x;window.TCPrg=y;window.TCBuf=B;\nexport function TCTex(c,a,e,h){var d=c.createTexture();c.bindTexture(3553,d);c.texParameteri(3553,10242,33071);c.texParameteri(3553,10243,33071);c.texParameteri(3553,10240,9728);c.texParameteri(3553,10241,9728);c.texImage2D(3553,0,6408,6408,5121,a);c.bindTexture(3553,null);d.width=e;d.height=h;return d};\nexport function TS(c){var indexB=0,a=c.getContext(\"webgl\"),e=c.width,h=c.height,d=y(a,\"precision lowp float;\\nattribute float a;\\nattribute vec2 b,c,d,e;\\nattribute vec4 f;\\nvarying vec2 g;\\nvarying vec4 h;\\nuniform mat4 i;\\nvoid main() {\\nfloat q=cos(a);\\nfloat w=sin(a);\\ngl_Position=i*vec4(((vec2(d.x*q-d.y*w,d.x*w+d.y*q)*c)+b),1.0,1.0);\\ng=e;\\nh=f;\\n}\",\"precision lowp float;\\nvarying vec2 g;\\nvarying vec4 h;\\nuniform sampler2D j;\\nvoid main(){\\ngl_FragColor=texture2D(j,g)*h;\\n}\"),z=a.bufferSubData.bind(a),\nA=a.drawElements.bind(a),E=a.bindTexture.bind(a),q=new ArrayBuffer(1747520),b=new Float32Array(q),r=new Uint32Array(q),g=new Uint16Array(131064),f=B(a,34963,g.byteLength,35044),l=B(a,34962,q.byteLength,35048),k=0,t=null,C=null,m,n,p;a.blendFunc(770,771);a.enable(3042);a.useProgram(d);a.bindBuffer(34963,f);for(f=indexB=0;65532>f;f+=6,indexB+=4)g[f+0]=indexB,g[f+1]=indexB+1,g[f+2]=indexB+2,g[f+3]=indexB+0,g[f+4]=indexB+3,g[f+5]=indexB+1;a.bufferSubData(34963,0,g);a.bindBuffer(34962,l);g=a.getAttribLocation(d,\n\"a\");l=a.getAttribLocation(d,\"b\");f=a.getAttribLocation(d,\"c\");m=a.getAttribLocation(d,\"d\");n=a.getAttribLocation(d,\"e\");p=a.getAttribLocation(d,\"f\");a.enableVertexAttribArray(g);a.vertexAttribPointer(g,1,5126,0,40,0);a.enableVertexAttribArray(l);a.vertexAttribPointer(l,2,5126,0,40,4);a.enableVertexAttribArray(f);a.vertexAttribPointer(f,2,5126,0,40,12);a.enableVertexAttribArray(m);a.vertexAttribPointer(m,2,5126,0,40,20);a.enableVertexAttribArray(n);a.vertexAttribPointer(n,2,5126,0,40,28);a.enableVertexAttribArray(p);\na.vertexAttribPointer(p,4,5121,1,40,36);a.uniformMatrix4fv(a.getUniformLocation(d,\"i\"),0,new Float32Array([2/e,0,0,0,0,-2/h,0,0,0,0,1,1,-1,1,0,0]));a.activeTexture(33984);return C={g:a,c:c,col:4294967295,bkg:function(F,b,c){a.clearColor(F,b,c,1)},cls:function(){a.clear(16384)},img:function(a,c,d,e,f,g,h,l,u,v,m,n,p,D){var G=c+e,H=d+f;f=d+f;e=c+e;var w=C.col;if(a!=t||10922<=k+1)z(34962,0,q),A(4,6*k,5123,0),k=0,a!=t&&(t=a,E(3553,t));a=40*k;b[a++]=g;b[a++]=h;b[a++]=l;b[a++]=u;b[a++]=v;b[a++]=c;b[a++]=\nd;b[a++]=m;b[a++]=n;r[a++]=w;b[a++]=g;b[a++]=h;b[a++]=l;b[a++]=u;b[a++]=v;b[a++]=G;b[a++]=H;b[a++]=p;b[a++]=D;r[a++]=w;b[a++]=g;b[a++]=h;b[a++]=l;b[a++]=u;b[a++]=v;b[a++]=c;b[a++]=f;b[a++]=m;b[a++]=D;r[a++]=w;b[a++]=g;b[a++]=h;b[a++]=l;b[a++]=u;b[a++]=v;b[a++]=e;b[a++]=d;b[a++]=p;b[a++]=n;r[a++]=w;10922<=++k&&(z(34962,0,q),A(4,6*k,5123,0),k=0)},flush:function(){0!=k&&(z(34962,0,b.subarray(0,40*k)),A(4,6*k,5123,0),k=0)}}};","export class GameObject {\n  constructor(x, y, texture, width, height, scaleX = 1, scaleY = 1) {\n    this.positionX = x\n    this.positionY = y\n    this.width = width\n    this.height = height\n    this.scaleX = scaleX\n    this.scaleY = scaleY\n    this.originX = 0\n    this.originY = 0\n    this.rotation = 0\n    this.texture = texture\n    this.currentFrame = 0\n    this.maxFrames = this.texture.height / this.height | 0\n    this.setFrame(0, 0)\n    this.animate(10)\n  }\n\n  update() {}\n\n  setFrame(x, y) {\n    this.u0 = x * this.width / this.texture.width\n    this.v0 = y * this.height / this.texture.height\n    this.u1 = this.u0 + (this.width / this.texture.width)\n    this.v1 = this.v0 + (this.height / this.texture.height)\n  }\n\n  animate() {\n    this.currentFrame = (this.currentFrame + 1) % this.maxFrames\n    this.setFrame(0, this.currentFrame)\n  }\n\n  draw(canvas) {\n    const originX = this.width * (-this.originX - 1 / 2)\n    const originY = this.height * (-this.originY - 1 / 2)\n    canvas.img(\n      this.texture, \n      originX,\n      originY,\n      this.width,\n      this.height,\n      this.rotation,\n      this.positionX,\n      this.positionY,\n      this.scaleX,\n      this.scaleY,\n      this.u0,\n      this.v0,\n      this.u1,\n      this.v1\n    )\n  }\n}\n","import { GameObject } from \"./gameobject\"\n\nexport class Player extends GameObject {\n  constructor(x, y, texture, width, height) {\n    super(x, y, texture, width, height)\n    this.rotation = -90 * Math.PI / 180\n  }\n}\n","import { GameObject } from \"./gameobject\"\n\nexport class Tower extends GameObject {\n  constructor(x, y, texture, width, height, f, scaleX = 1, scaleY = 1) {\n    super(x, y, texture, width, height, scaleX, scaleY)\n    this.speed = 2\n    this.u0 = 0 / texture.width\n    this.v0 = f / texture.height\n    this.u1 = this.u0 + (width / texture.width)\n    this.v1 = this.v0 + (height / texture.height)\n    this.originX = -0.5\n  }\n\n  animate() {}\n  \n  update({ deltaTime }) {\n    this.positionY += this.speed * deltaTime\n  }\n}\n","import { GameObject } from \"./gameobject\"\n\nexport class Arrow extends GameObject {\n  constructor(x, y, texture, width, height) {\n    super(x, y, texture, width, height)\n  }\n\n  setOrientation(dir) {\n    const mapping = {\n      up: 0,\n      left: -Math.PI / 2,\n      down: Math.PI,\n      right: Math.PI / 2\n    }\n    this.rotation = mapping[dir]\n  }\n\n  animate() {}\n}\n","import { GameObject } from \"./gameobject\"\nimport { Arrow } from \"./arrow\"\n\nexport class Enemy extends GameObject {\n  constructor(x, y, enemyTexture, arrowTexture, width, height) {\n    super(x, y, enemyTexture, width, height)\n    this.arrowObject = new Arrow(x - this.width * 3, y, arrowTexture, width, height)\n    this.rotation = -90 * Math.PI / 180\n    this.speed = 2\n\n    this.dir = ['up', 'left', 'down', 'right'][Math.random() * 4 | 0]\n    this.arrowObject.setOrientation(this.dir)\n    this.inRange = false\n  }\n\n  update({ player, deltaTime }) {\n    this.positionY += this.speed * deltaTime\n    this.arrowObject.positionY = this.positionY\n    const distance = Math.abs(player.positionY - this.positionY)\n    if (distance < 250) {\n      this.arrowObject.setFrame(1, 0)\n      this.inRange = true\n    }\n  }\n\n  draw(canvas) {\n    super.draw(canvas)\n    this.arrowObject.draw(canvas)\n  }\n}\n","import { Player } from './components/player'\nimport { Tower } from './components/tower'\nimport { Enemy } from './components/enemy'\n\nexport class Game {\n  constructor(canvas, textures) {\n    this.canvas = canvas\n    this.gameObjects = []\n    this.enemies = []\n    this.textures = textures\n    this.slideSpeed = 200\n    this.lastFrameTime = 0\n    this.enemiesSpawned = 0\n    this.distanceSlided = 0\n    const wallSize = 32 * 3\n    this.gameObjects.push(\n      this.player = new Player(canvas.c.width - wallSize - 16, canvas.c.height - 3 * 32, textures.kitten, 32, 32)\n    )\n    for (let i = 0; i < 500; i += 1) {\n      const tower = new Tower(canvas.c.width - wallSize, -i * wallSize + canvas.c.height, textures.kitten, 32, 32, i % 4 * 32, 3, 3)\n      tower.speed = this.slideSpeed\n      this.gameObjects.push(tower)\n    }\n\n    canvas.bkg(0.227, 0.227, 0.227)\n    this.animate(4)\n    this.mainLoop()\n  }\n\n  spawnEnemy() {\n    const pos = -(Math.random() * 32)\n    const enemy = new Enemy(this.canvas.c.width - 32 * 3 - 16, pos, this.textures.kitten, this.textures.arrow, 32, 32)\n    enemy.speed = this.slideSpeed\n    this.gameObjects.push(enemy)\n    this.enemies.push(enemy)\n    this.enemiesSpawned += 1\n  }\n\n  animate(fps) {\n    setInterval(() => {\n      this.gameObjects.forEach(gameObject => {\n        gameObject.animate()\n      })\n    }, 1000 / fps)\n  }\n\n  update(deltaTime) {\n    this.gameObjects.forEach(gameObject => {\n      gameObject.update({ deltaTime, player: this.player })\n    })\n    if (this.distanceSlided / (this.canvas.c.height / 4) > this.enemiesSpawned) {\n      this.spawnEnemy()\n    }\n    this.distanceSlided += this.slideSpeed * deltaTime\n  }\n\n  draw() {\n    this.canvas.cls()\n    this.gameObjects.forEach(gameObject => {\n      gameObject.draw(this.canvas)\n    })\n    this.canvas.flush()\n  }\n\n  mainLoop(elapsedTime = 0) {\n    requestAnimationFrame(this.mainLoop.bind(this))\n    const deltaTime = (elapsedTime - this.lastFrameTime) / 1000\n    this.lastFrameTime = elapsedTime\n    this.update(deltaTime)\n    this.draw()\n  }\n\n  move(dir) {\n    const nextEnemy = this.enemies[0]\n    if (!nextEnemy) {\n      alert('you lost')\n      return\n    }\n    if (!nextEnemy.inRange || dir !== nextEnemy.dir) {\n      alert('you lost')\n      return\n    }\n    \n    const index = this.gameObjects.indexOf(nextEnemy)\n    this.gameObjects.splice(index, 1)\n    this.enemies.shift()\n  }\n}\n","import { TS, TCTex } from './libs/ts'\nimport kittenstex from './assets/kittens.png'\nimport arrowtex from './assets/arrow.png'\nimport { Game } from './game'\n\nconst $c = document.getElementById('game-canvas')\nconst canvas = TS($c)\n\nlet game = null\n\nconst textures = {\n  kitten: kittenstex,\n  arrow: arrowtex\n}\n\nconst move = dir => {\n  console.log(dir)\n  if (dir) {\n    game.move(dir)\n  }\n}\n\nlet touchStart = null\n\n$c.addEventListener('touchstart', event => {\n  touchStart = {\n    x: event.touches[0].clientX,\n    y: event.touches[0].clientY\n  }\n})\n\n$c.addEventListener('touchend', event => {\n  const diff = {\n    x: event.changedTouches[0].clientX - touchStart.x,\n    y: event.changedTouches[0].clientY - touchStart.y\n  }\n  touchStart = null\n  const ratio = Math.abs(diff.x) / Math.abs(diff.y)\n  const absRatio = Math.abs(ratio)\n  const lenght = Math.hypot(diff.x, diff.y)\n  if (lenght < 50 || (absRatio > 0.9 && absRatio < 1.1)) {\n    return\n  }\n  if (absRatio > 1) {\n    if (diff.x < 0) {\n      move('left')\n    } else {\n      move('right')\n    }\n  } else {\n    if (diff.y < 0) {\n      move('up')\n    } else {\n      move('down')\n    }\n  }\n})\n\nwindow.addEventListener('keydown', event => {\n  const mapping = {\n    ArrowUp: 'up',\n    ArrowDown: 'down',\n    ArrowLeft: 'left',\n    ArrowRight: 'right',\n    KeyW: 'up',\n    KeyS: 'down',\n    KeyA: 'left',\n    KeyD: 'right',\n  }\n\n  const dir = mapping[event.code]\n  move(dir)\n})\n\nconst loadImage = src => {\n  return new Promise((resolve, reject) => {\n    const image = new Image()\n    image.addEventListener('load', () => resolve(image))\n    image.addEventListener('error', error => reject(error))\n    image.src = src\n  })\n}\n\nconst createTexture = async ([name, src]) => {\n  const image = await loadImage(src)\n  return [\n    name,\n    TCTex(canvas.g, image, image.width, image.height)\n  ]\n}\n\nPromise.all(Object.entries(textures).map(createTexture))\n.then(textures => Object.fromEntries(textures))\n.then(textures => {\n  game = new Game(canvas, textures)\n})\n.catch(error => {\n  console.error(error)\n})\n"]}